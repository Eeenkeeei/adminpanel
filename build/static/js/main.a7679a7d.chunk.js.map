{"version":3,"sources":["Menu/Menu.js","img/img.js","model/Question.js","model/User.js","QuestionElement/QuestionElement.js","QuestionsList/QuestionList.js","Support/Support.js","model/Task.js","UserItem/UserItem.js","UsersList/UsersList.js","DatabaseStatistic/DatabaseStatistic.js","UsersPage/UsersPage.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Menu","Component","state","count","this","props","setState","prevProps","prevState","snapshot","counter","react_default","a","createElement","className","react_router_dom","to","xmlns","width","height","viewBox","d","fill","style","fontSize","Question","username","theme","question","status","Object","classCallCheck","User","object","email","age","edu","gender","timetable","tasks","lessonsTimetable","startPage","support","noteTags","QuestionElement","handlerChangeUsers","_this","onHandleUsersChange","isClicked","questionBody","isUpdated","handlerAnswerButton","handlerAddAnswer","event","result1","result2","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","item","then","res","json","console","log","result","undefined","error","handleChange","value","target","handleAnswerSendButton","answerForm","htmlFor","onChange","type","marginTop","onClick","QuestionList","handleUsersChange","toggle","handleCounter","onCounterChange","users","questions","questionsCounter","_this2","objectToPush","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","resultElement","length","map","concat","toConsumableArray","_iterator","Symbol","iterator","next","done","err","return","_this3","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","_iterator2","_this4","QuestionElement_QuestionElement","key","UsersList","handleCounterChange","QuestionList_QuestionList","Task","id","name","UserItem","handleUserObjectClick","extendedInfo","supportCounter","lessonsCounter","tagsCounter","cursor","ListGroup","Item","handleAdd","items","nextId","newName","UserItem_UserItem","DatabaseStatistic","menCounter","womenCounter","user","UsersPage","DatabaseStatistic_DatabaseStatistic","UsersList_UsersList","Main","onChangeState","react_router","exact","path","component","render","Support_UsersList","assign","App","toggleCount","onChangeToggle","Menu_Menu","Main_Main","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7679a7d.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Img from \"../img/img\"\n\nexport default class Menu extends Component {\n    state = {\n        count: 0\n    };\n\n    componentDidMount() {\n        // console.log('MENU COUNT OLD', this.state.count);\n        // console.log('MENU COUNT', this.props.count);\n        if (this.state.count !== this.props.count) {\n            this.setState({\n                count: this.props.count\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log('MENU COUNT OLD', this.state.count);\n        // console.log('MENU COUNT', this.props.count);\n        if (prevState.count !== this.props.count) {\n            this.setState({\n                count: this.props.count\n            })\n        }\n    }\n\n    render() {\n        let counter;\n        {\n            this.props.count === 0 ? counter = null : counter = this.props.count\n        }\n        return (\n            <menu>\n                <ul className=\"list-group a\">\n                    <Link to='/users'>\n                    <span className=\"h6 list-group-item list-group-item-action a\"><svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"24\" height=\"24\"\n                        viewBox=\"0 0 24 24\">\n    <path\n        d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"/>\n    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n</svg> Пользователи</span>\n                    </Link>\n                    <Link to='/support'>\n\n                            <span className=\"h6 list-group-item list-group-item-action\">\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n                                <path\n                                    d=\"M20 2H4c-1.1 0-1.99.9-1.99 2L2 22l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z\"/>\n                                <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                            </svg> Панель поддержки\n                                <span className=\"badge badge-danger\"\n                                      style={{fontSize: 18}}>{counter}</span>\n                            </span>\n\n                    </Link>\n                </ul>\n            </menu>\n        );\n    }\n}\n","import React, {Component} from 'react';\n\nexport default class Img extends Component {\n    render() {\n        const {src} = this.props;\n\n        return (\n            <img src={src} alt=\"1\" />\n        );\n    }\n}\n","export default class Question {\n    constructor(username, theme, question, status) {\n        this.username = username;\n        this.theme = theme;\n        this.question = question;\n        this.status = status;\n    }\n}\n","export default class User {\n    constructor(object){\n        this.username = object.username;\n        this.email = object.email;\n        this.age = object.age;\n        this.edu = object.edu;\n        this.gender = object.gender;\n        this.timetable = object.timetable;\n        this.tasks = object.tasks;\n        this.lessonsTimetable = object.lessonsTimetable;\n        this.startPage = object.startPage;\n        this.support = object.support;\n        this.noteTags = object.noteTags;\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport Question from \"../model/Question\";\nimport User from \"../model/User\";\nimport \"animate.css\"\n\nexport default class QuestionElement extends Component {\n    handlerChangeUsers = () => {\n        this.props.onHandleUsersChange();\n    };\n\n    state = {\n        isClicked: false,\n        questionBody: '',\n        isUpdated: this.props.isUpdated\n    };\n\n    handlerAnswerButton = () => {\n        this.setState({\n            isClicked: !this.state.isClicked\n        })\n    };\n\n\n    handlerAddAnswer = (event) => {\n        let result1;\n        let result2;\n        event.preventDefault();\n        this.setState({\n            isClicked: !this.state.isClicked\n        });\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/addAnswer\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                \"username\": this.props.item.username,\n                \"theme\": this.props.item.theme,\n                \"question\": this.props.item.question,\n                \"status\": this.state.questionBody\n            })\n        }).then((res) => {\n            res.json().then((res) => {\n\n                result1 = res;\n                console.log(result1);\n                fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n                    method: 'GET',\n                    headers: {'Content-Type': 'application/json'},\n                })\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            result2 = result;\n                            if (result1 !== undefined && result2 !== undefined) {\n                                console.log(result2);\n                                this.handlerChangeUsers();\n                            }\n                        },\n                        (error) => {\n                            console.log(error)\n                        }\n                    );\n            });\n\n        });\n\n\n\n        this.setState({\n            questionBody: ''\n        });\n    };\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        this.setState({\n            questionBody: value\n        });\n    };\n\n    handleAnswerSendButton = (event) => {\n        this.handlerAddAnswer(event);\n        this.handlerChangeUsers();\n    };\n\n    render() {\n        const isClicked = this.state.isClicked;\n        let answerForm;\n        if (isClicked) {\n            answerForm =\n                <form className=\"fadeIn wow animated\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Ответ:</label>\n                        <textarea className=\"form-control\" value={this.state.questionBody} onChange={this.handleChange}>\n                                </textarea>\n                        <button type=\"submit\" style={{marginTop: 15}} className=\"btn btn-outline-success btn-sm\"\n                                onClick={this.handlerAddAnswer}>Добавить ответ\n                        </button>\n                    </div>\n                </form>\n            ;\n        }\n\n        let questionCard;\n        {\n            this.props.item.status === 'false' ? questionCard =\n                <div className=\"fadeIn wow animated\">\n                    <div className=\"card\" style={{marginTop: 15}}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Пользователь: {this.props.item.username}</h5>\n                            <h6 className=\"card-subtitle mb-2 h5\">Тема вопроса: {this.props.item.theme}</h6>\n                            <p className=\"card-text h5\">{this.props.item.question}</p>\n                            {this.props.item.status === 'false' ?\n                                <span className=\"badge badge-danger\"><h6>Требуется ответ</h6></span> :\n                                <span className=\"badge badge-success\"><h6>Вопрос закрыт</h6></span>\n                            }\n                            <p>\n                                <button className=\"btn-outline-dark btn btn-sm\" style={{marginTop: 15}}\n                                        onClick={this.handlerAnswerButton}>Ответить\n                                </button>\n                            </p>\n                            {answerForm}\n                        </div>\n                    </div>\n                </div> : questionCard = null\n        }\n\n        return (\n            questionCard\n        )\n    }\n}\n\nQuestionElement.propTypes = {\n    item: PropTypes.instanceOf(Question),\n    onRemove: PropTypes.func\n};\n","import React, {Component} from 'react';\nimport QuestionElement from \"../QuestionElement/QuestionElement\";\nimport User from \"../model/User\";\nimport Question from \"../model/Question\";\n\nexport default class QuestionList extends Component {\n\n\n    handleUsersChange = () => {\n        this.setState({toggle: !this.state.toggle});\n    };\n\n    handleCounter = (counter) => {\n        this.props.onCounterChange(counter);\n\n    };\n\n\n\n    state = {\n        users: [],\n        questions: [],\n        toggle: false,\n        questionsCounter: 0\n    }; // <- ES10: 2019 (Babel)\n\n    componentDidMount() {\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let objectToPush;\n                    for (const resultElement of result) {\n                        if (resultElement.support.length !== 0) {\n                            resultElement.support.map((object) => {\n                                objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                this.setState({\n                                    questions: [...this.state.questions, objectToPush]\n                                });\n                                if (objectToPush.status === 'false') {\n                                    this.setState({\n                                        questionsCounter: this.state.questionsCounter+1\n                                    });\n                                    // console.log('count',this.state.questionsCounter);\n                                    this.handleCounter(this.state.questionsCounter);\n                                }\n\n                            })\n                        }\n                        this.setState({\n                            users: [...this.state.users, new User(resultElement)],\n                        });\n\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.toggle !== this.state.toggle) {\n            this.setState({questions: [], users: [], questionsCounter: 0}); // сброс предыдущих массивов\n            fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'},\n            })\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        let objectToPush;\n                        for (const resultElement of result) {\n                            if (resultElement.support.length !== 0) {\n                                resultElement.support.map((object) => {\n                                    objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                    this.setState({\n                                        questions: [...this.state.questions, objectToPush]\n                                    });\n                                    if (objectToPush.status === 'false') {\n                                        this.setState({\n                                            questionsCounter: this.state.questionsCounter+1\n                                        });\n                                        console.log('count',this.state.questionsCounter);\n                                        this.handleCounter(this.state.questionsCounter);\n                                    } else {\n                                        this.handleCounter(this.state.questionsCounter);\n                                    }\n\n                                })\n                            }\n                            this.setState({\n                                users: [...this.state.users, new User(resultElement)],\n                            });\n\n                        }\n                    },\n                    (error) => {\n                        console.log(error)\n                    }\n                );\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.questions.map(value => <QuestionElement onHandleUsersChange={this.handleUsersChange}\n                                                                    key={value.question}  item={value}/>)}\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport QuestionList from \"../QuestionsList/QuestionList\";\n\nexport default class UsersList extends Component {\n    // state -> состояние компонента - mutable (изменяемое)\n    state = {\n        questionsCounter: 0\n\n    }; // <- ES10: 2019 (Babel)\n    handleCounterChange = (counter) => {\n        this.props.onHandleUsersChange(counter);\n        // console.log('ВЫЗОВ ИЗ questionlist')\n    };\n\n    render() {\n        return (\n            <div>\n                <QuestionList onCounterChange={this.handleCounterChange}/>\n            </div>\n        );\n    }\n\n}\n","export default class Task {\r\n    constructor(id, name, done) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.done = done;\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'; // Alt + enter -> add to package.json\nimport {ListGroup} from 'react-bootstrap';\nimport User from \"../model/User\";\nimport \"animate.css\"\n\nexport default class UserItem extends Component {\n\n    state = {\n        isClicked: false,\n        value: ''\n    };\n\n    handleUserObjectClick = () => {\n        console.log('Клик на списке');\n        this.setState({\n            isClicked: !this.state.isClicked\n        })\n    };\n\n\n    render() {\n        const isClicked = this.state.isClicked;\n        let extendedInfo;\n        if (isClicked) {\n            extendedInfo =\n                <div style={{cursor: 'default', marginTop: 10}} className=\"fadeIn wow animated\">\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item h6\">Пол: {this.props.item.gender.length > 1 ? this.props.item.gender : 'Не указан'} |</li>\n                        <li className=\"list-inline-item h6\">{this.props.item.email} |</li>\n                        <li className=\"list-inline-item h6\">Место\n                            учебы: {this.props.item.edu.length > 1 ? this.props.item.edu : 'Не указано'} |\n                        </li>\n                        <li className=\"list-inline-item h6\">Возраст: {this.props.item.age.length > 1 ? this.props.item.age : 'Не указан'} </li>\n                    </ul>\n                </div>\n            ;\n\n        }\n        let supportCounter;\n        {\n            this.props.item.support.length !== 0 ? supportCounter =\n                <span>Количество обращений:  <span className=\"badge badge-info\">{this.props.item.support.length}</span></span> : supportCounter = null\n        }\n        let lessonsCounter;\n        {\n            this.props.item.timetable.length !== 0 ? lessonsCounter = <span>Занятий:  <span\n                className=\"badge badge-info\">{this.props.item.timetable.length}</span> </span> : lessonsCounter = null\n        }\n        let tagsCounter;\n        {\n            this.props.item.noteTags.length !== 0 ? tagsCounter = <span> Тегов:  <span\n                className=\"badge badge-info\">{this.props.item.noteTags.length}</span> </span> : tagsCounter = null\n        }\n        return (\n            <div style={{cursor: 'pointer', marginTop: 5}}>\n                <ListGroup.Item className=\"h5\" onClick={this.handleUserObjectClick}>{this.props.item.username}\n                    {tagsCounter} {lessonsCounter}\n                    {supportCounter}\n                </ListGroup.Item>\n                {extendedInfo}\n            </div>\n        );\n    }\n\n\n}\n\nUserItem.propTypes = {\n    item: PropTypes.instanceOf(User),\n    onRemove: PropTypes.func\n};\n","import React, {Component} from 'react';\r\nimport Task from \"../model/Task\"; // <- пока \"всегда\" нужно не забывать импортировать\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport UserItem from \"../UserItem/UserItem\";\r\nimport \"animate.css\"\r\nexport default class UsersList extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{cursor: 'pointer'}} className=\"fadeIn wow animated\">\r\n                <ListGroup>\r\n                    {this.props.item.map(value => <UserItem key={value.username} item={value}/>)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    } // console.log(if () {}); <- нельзя\r\n    // <expr> ? <true> : <false> <- тернарный оператор\r\n\r\n    handleAdd = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => ({\r\n            items: [...prevState.items, new Task(prevState.nextId + 1, prevState.newName, false)], // копия предыдущего массива + новый объект Task\r\n            nextId: prevState.nextId + 1,\r\n            newName: ''\r\n        }));\r\n    };\r\n\r\n    // {} <- JSX \"вывод\" определённого объекта\r\n    // item={this.state.items[0]} <- передача атрибута в виде объекта, а не строки\r\n}\r\n","import React, {Component} from 'react';\n\nexport default class DatabaseStatistic extends Component{\n    componentWillMount() {\n    }\n\n    render(){\n\n        let menCounter = 0;\n        let womenCounter = 0;\n\n        for (const user of this.props.users) {\n            if (user.gender === 'Мужской'){\n                menCounter++;\n            }\n            if (user.gender === 'Женский'){\n                womenCounter++;\n            }\n\n        }\n        return(\n            <div>\n                <span className=\"h5\">Статистика по аккаунтам</span>\n                <p>\n                    <span className=\"h5\">Всего аккаунтов: {this.props.users.length}</span>\n                </p>\n                <p>\n                    <span className=\"h5\">Мужчин: {menCounter}, женщин: {womenCounter}</span>\n                </p>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport UsersList from \"../UsersList/UsersList\";\nimport DatabaseStatistic from \"../DatabaseStatistic/DatabaseStatistic\";\nimport User from \"../model/User\";\nimport Question from \"../model/Question\";\n\nexport default class UsersPage extends Component{\n    state = {\n        users: [\n\n        ],\n        questions: [],\n        questionsCounter: 0\n\n    }; // <- ES10: 2019 (Babel)\n\n    componentDidMount() {\n\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let objectToPush;\n                    for (const resultElement of result) {\n                        if (resultElement.support.length !== 0) {\n                            resultElement.support.map((object) => {\n                                objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                this.setState({\n                                    questions: [...this.state.questions, objectToPush]\n                                });\n                                if (objectToPush.status === 'false') {\n                                    this.setState({\n                                        questionsCounter: this.state.questionsCounter+1\n                                    });\n\n\n                                }\n\n                            })\n                        }\n                        this.setState({\n                            users: [...this.state.users, new User(resultElement)],\n                        });\n\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    }\n\n    render() {\n        return(\n\n            <div>\n                <DatabaseStatistic users={this.state.users}/>\n                <UsersList item={this.state.users}/>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport '../App.css';\nimport {Route, Switch} from \"react-router-dom\";\nimport Support from \"../Support/Support\";\nimport UsersPage from \"../UsersPage/UsersPage\";\nimport \"animate.css\"\n\nexport default class Main extends Component{\n    state = {\n        count: 1\n    };\n\n    handleCounterChange = (counter) => {\n        this.props.onChangeState(counter)\n    };\n\n\n\n    render() {\n\n        return(\n            <main count={this.state.count}>\n                <Switch>\n                    <Route exact path='/users' component={UsersPage} className=\"fadeIn wow animated\" />\n                    <Route path='/support'  render={(props)=><Support count={this.state.count} onHandleUsersChange={this.handleCounterChange} {...props}/>}/>}/>\n                </Switch>\n            </main>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Menu from \"./Menu/Menu\"\nimport Main from \"./Main/Main\"\nimport \"animate.css\"\nclass App extends Component {\n    state = {\n        questionsCounter: 0,\n        toggle: false,\n        toggleCount: 0\n    };\n\n    onChangeToggle = () =>{\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    };\n\n\n    onChangeState = (counter) =>{\n        this.setState({\n            questionsCounter: counter,\n            toggleCount: counter,\n\n        });\n        // console.log('counter', counter)\n    };\n\n    render() {\n        // console.log(this.state.questionsCounter);\n\n        // return React.createElement('section', null, React.createElement('div', null, React.createElement('span', null, null)));\n        return ( // <- нужно запомнить про открывающую круглую скобку\n\n\n            <div className=\"container-fluid fadeIn wow animated\">\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Menu count={this.state.questionsCounter}/>\n                    </div>\n                    <div className=\"col-9\">\n                        <Main onChangeState={this.onChangeState}/>\n                    </div>\n                </div>\n            </div>\n        ); // <- внутри JSX наверху должен быть всегда один родитель\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}