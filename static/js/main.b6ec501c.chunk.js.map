{"version":3,"sources":["Menu/Menu.js","model/Question.js","model/User.js","QuestionElement/QuestionElement.js","QuestionsList/QuestionList.js","Support/Support.js","model/Task.js","UserItem/UserItem.js","UsersList/UsersList.js","DatabaseStatistic/DatabaseStatistic.js","UsersPage/UsersPage.js","Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Menu","state","count","this","props","setState","prevProps","prevState","snapshot","react_default","a","createElement","className","react_router_dom","to","Component","Question","username","theme","question","status","Object","classCallCheck","User","object","email","age","edu","gender","timetable","tasks","lessonsTimetable","startPage","support","noteTags","QuestionElement","handlerChangeUsers","_this","onHandleUsersChange","isClicked","questionBody","isUpdated","handlerAnswerButton","handlerAddAnswer","event","result1","result2","preventDefault","fetch","method","headers","Content-Type","body","JSON","stringify","item","then","res","json","console","log","result","undefined","error","handleChange","value","target","handleAnswerSendButton","answerForm","htmlFor","onChange","type","style","marginTop","onClick","QuestionList","handleUsersChange","toggle","handleCounter","counter","onCounterChange","users","questions","questionsCounter","_this2","objectToPush","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_loop","resultElement","length","map","concat","toConsumableArray","_iterator","Symbol","iterator","next","done","err","return","_this3","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop2","_iterator2","_this4","QuestionElement_QuestionElement","key","UsersList","handleCounterChange","QuestionList_QuestionList","Task","id","name","UserItem","handleUserObjectClick","extendedInfo","cursor","ListGroup","Item","handleAdd","items","nextId","newName","UserItem_UserItem","DatabaseStatistic","menCounter","womenCounter","user","UsersPage","DatabaseStatistic_DatabaseStatistic","UsersList_UsersList","Main","onChangeState","react_router","exact","path","component","render","Support_UsersList","assign","App","toggleCount","onChangeToggle","Menu_Menu","Main_Main","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b6ec501c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {Link} from \"react-router-dom\";\n\nexport default class Menu extends Component {\n    state = {\n        count: 0\n    };\n\n    componentDidMount() {\n        // console.log('MENU COUNT OLD', this.state.count);\n        // console.log('MENU COUNT', this.props.count);\n        if (this.state.count !== this.props.count){\n            this.setState({\n                count: this.props.count\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // console.log('MENU COUNT OLD', this.state.count);\n        // console.log('MENU COUNT', this.props.count);\n        if (prevState.count !== this.props.count){\n            this.setState({\n                count: this.props.count\n            })\n        }\n    }\n\n    render() {\n        return (\n        <menu>\n            <ul className=\"list-group a\">\n                <Link to='/users'>\n                    <span className=\"list-group-item list-group-item-action a\">Пользователи</span>\n                </Link>\n                <Link to='/support'>\n                    <li className=\"list-group-item list-group-item-action a\">Панель поддержки <span className=\"badge badge-success\">{this.props.count}</span></li>\n                </Link>\n            </ul>\n        </menu>\n        );\n    }\n}\n","export default class Question {\n    constructor(username, theme, question, status) {\n        this.username = username;\n        this.theme = theme;\n        this.question = question;\n        this.status = status;\n    }\n}\n","export default class User {\n    constructor(object){\n        this.username = object.username;\n        this.email = object.email;\n        this.age = object.age;\n        this.edu = object.edu;\n        this.gender = object.gender;\n        this.timetable = object.timetable;\n        this.tasks = object.tasks;\n        this.lessonsTimetable = object.lessonsTimetable;\n        this.startPage = object.startPage;\n        this.support = object.support;\n        this.noteTags = object.noteTags;\n    }\n}\n","import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport Question from \"../model/Question\";\nimport User from \"../model/User\";\n\n\nexport default class QuestionElement extends Component {\n    handlerChangeUsers = () => {\n        this.props.onHandleUsersChange();\n    };\n\n    state = {\n        isClicked: false,\n        questionBody: '',\n        isUpdated: this.props.isUpdated\n    };\n\n    handlerAnswerButton = () => {\n        this.setState({\n            isClicked: !this.state.isClicked\n        })\n    };\n\n\n    handlerAddAnswer = (event) => {\n        let result1;\n        let result2;\n        event.preventDefault();\n        this.setState({\n            isClicked: !this.state.isClicked\n        });\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/addAnswer\", {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                \"username\": this.props.item.username,\n                \"theme\": this.props.item.theme,\n                \"question\": this.props.item.question,\n                \"status\": this.state.questionBody\n            })\n        }).then((res) => {\n            res.json().then((res) => {\n\n                result1 = res;\n                console.log(result1);\n                fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n                    method: 'GET',\n                    headers: {'Content-Type': 'application/json'},\n                })\n                    .then(res => res.json())\n                    .then(\n                        (result) => {\n                            result2 = result;\n                            if (result1 !== undefined && result2 !== undefined) {\n                                console.log(result2);\n                                this.handlerChangeUsers();\n                            }\n                        },\n                        (error) => {\n                            console.log(error)\n                        }\n                    );\n            });\n\n        });\n\n\n\n        this.setState({\n            questionBody: ''\n        });\n    };\n\n    handleChange = (event) => {\n        const value = event.target.value;\n        this.setState({\n            questionBody: value\n        });\n    };\n\n    handleAnswerSendButton = (event) => {\n        this.handlerAddAnswer(event);\n        this.handlerChangeUsers();\n    };\n\n    render() {\n        const isClicked = this.state.isClicked;\n        let answerForm;\n        if (isClicked) {\n            answerForm =\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleInputEmail1\">Ответ:</label>\n                        <textarea className=\"form-control\" value={this.state.questionBody} onChange={this.handleChange}>\n                                </textarea>\n                        <button type=\"submit\" style={{marginTop: 15}} className=\"btn btn-outline-success btn-sm\"\n                                onClick={this.handlerAddAnswer}>Добавить ответ\n                        </button>\n                    </div>\n                </form>\n            ;\n        }\n\n        let questionCard;\n        // if (this.props.item.status !== 'false'){\n        //     questionCard = null\n        // }\n        {\n            this.props.item.status === 'false' ? questionCard =\n                <div>\n                    <div className=\"card\" style={{marginTop: 15}}>\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Пользователь: {this.props.item.username}</h5>\n                            <h6 className=\"card-subtitle mb-2 h5\">Тема вопроса: {this.props.item.theme}</h6>\n                            <p className=\"card-text h5\">{this.props.item.question}</p>\n                            {this.props.item.status === 'false' ?\n                                <span className=\"badge badge-danger\"><h6>Требуется ответ</h6></span> :\n                                <span className=\"badge badge-success\"><h6>Вопрос закрыт</h6></span>\n                            }\n                            <p>\n                                <button className=\"btn-outline-dark btn btn-sm\" style={{marginTop: 15}}\n                                        onClick={this.handlerAnswerButton}>Ответить\n                                </button>\n                            </p>\n                            {answerForm}\n                        </div>\n                    </div>\n                </div> : questionCard = null\n        }\n\n        return (\n            questionCard\n        )\n    }\n}\n\nQuestionElement.propTypes = {\n    item: PropTypes.instanceOf(Question),\n    onRemove: PropTypes.func\n};\n","import React, {Component} from 'react';\nimport QuestionElement from \"../QuestionElement/QuestionElement\";\nimport User from \"../model/User\";\nimport Question from \"../model/Question\";\n\nexport default class QuestionList extends Component {\n\n\n    handleUsersChange = () => {\n        this.setState({toggle: !this.state.toggle});\n    };\n\n    handleCounter = (counter) => {\n        this.props.onCounterChange(counter);\n\n    };\n\n\n\n    state = {\n        users: [],\n        questions: [],\n        toggle: false,\n        questionsCounter: 0\n    }; // <- ES10: 2019 (Babel)\n\n    componentDidMount() {\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let objectToPush;\n                    for (const resultElement of result) {\n                        if (resultElement.support.length !== 0) {\n                            resultElement.support.map((object) => {\n                                objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                this.setState({\n                                    questions: [...this.state.questions, objectToPush]\n                                });\n                                if (objectToPush.status === 'false') {\n                                    this.setState({\n                                        questionsCounter: this.state.questionsCounter+1\n                                    });\n                                    // console.log('count',this.state.questionsCounter);\n                                    this.handleCounter(this.state.questionsCounter);\n                                }\n\n                            })\n                        }\n                        this.setState({\n                            users: [...this.state.users, new User(resultElement)],\n                        });\n\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.toggle !== this.state.toggle) {\n            this.setState({questions: [], users: [], questionsCounter: 0}); // сброс предыдущих массивов\n            fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n                method: 'GET',\n                headers: {'Content-Type': 'application/json'},\n            })\n                .then(res => res.json())\n                .then(\n                    (result) => {\n                        let objectToPush;\n                        for (const resultElement of result) {\n                            if (resultElement.support.length !== 0) {\n                                resultElement.support.map((object) => {\n                                    objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                    this.setState({\n                                        questions: [...this.state.questions, objectToPush]\n                                    });\n                                    if (objectToPush.status === 'false') {\n                                        this.setState({\n                                            questionsCounter: this.state.questionsCounter+1\n                                        });\n                                        console.log('count',this.state.questionsCounter);\n                                        this.handleCounter(this.state.questionsCounter);\n                                    } else {\n                                        this.handleCounter(this.state.questionsCounter);\n                                    }\n\n                                })\n                            }\n                            this.setState({\n                                users: [...this.state.users, new User(resultElement)],\n                            });\n\n                        }\n                    },\n                    (error) => {\n                        console.log(error)\n                    }\n                );\n        }\n\n    }\n\n    render() {\n        return (\n            <div>\n                {this.state.questions.map(value => <QuestionElement onHandleUsersChange={this.handleUsersChange}\n                                                                    key={value.question}  item={value}/>)}\n\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport QuestionList from \"../QuestionsList/QuestionList\";\n\nexport default class UsersList extends Component {\n    // state -> состояние компонента - mutable (изменяемое)\n    state = {\n        questionsCounter: 0\n\n    }; // <- ES10: 2019 (Babel)\n    handleCounterChange = (counter) => {\n        this.props.onHandleUsersChange(counter);\n        // console.log('ВЫЗОВ ИЗ questionlist')\n    };\n\n    render() {\n        return (\n            <div>\n                <QuestionList onCounterChange={this.handleCounterChange}/>\n            </div>\n        );\n    }\n\n}\n","export default class Task {\r\n    constructor(id, name, done) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.done = done;\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types'; // Alt + enter -> add to package.json\nimport {ListGroup} from 'react-bootstrap';\nimport User from \"../model/User\";\n\nexport default class UserItem extends Component {\n\n    state = {\n        isClicked: false,\n        value: ''\n    };\n\n    handleUserObjectClick = () => {\n        console.log('Клик на списке');\n        this.setState({\n            isClicked: !this.state.isClicked\n        })\n    };\n\n\n    render() {\n        const isClicked = this.state.isClicked;\n        let extendedInfo;\n        if (isClicked) {\n            extendedInfo =\n                <div style={{cursor: 'default', marginTop: 10}}>\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item h6\">Пол: {this.props.item.gender.length > 1 ? this.props.item.gender : 'Не указан'} |</li>\n                        <li className=\"list-inline-item h6\">{this.props.item.email} |</li>\n                        <li className=\"list-inline-item h6\">Место учебы: {this.props.item.edu.length > 1 ? this.props.item.edu : 'Не указано'} |</li>\n                        <li className=\"list-inline-item h6\">Возраст: {this.props.item.age.length > 1 ? this.props.item.age : 'Не указан'} </li>\n                        <button className=\"btn btn-outline-dark btn-sm\">Удалить аккаунт</button>\n                    </ul>\n                </div>\n            ;\n\n        }\n        return (\n            <div style={{cursor: 'default', marginTop: 10}}>\n                <ListGroup.Item className=\"h5\" onClick={this.handleUserObjectClick}>{this.props.item.username}, тегов: {this.props.item.noteTags.length}, занятий: {this.props.item.timetable.length}</ListGroup.Item>\n                {extendedInfo}\n            </div>\n        );\n    }\n\n\n}\n\nUserItem.propTypes = {\n    item: PropTypes.instanceOf(User),\n    onRemove: PropTypes.func\n};\n","import React, {Component} from 'react';\r\nimport Task from \"../model/Task\"; // <- пока \"всегда\" нужно не забывать импортировать\r\nimport {ListGroup} from 'react-bootstrap';\r\nimport UserItem from \"../UserItem/UserItem\";\r\n\r\nexport default class UsersList extends Component {\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{cursor: 'pointer'}}>\r\n                <ListGroup>\r\n                    {this.props.item.map(value => <UserItem key={value.username} item={value}/>)}\r\n                </ListGroup>\r\n            </div>\r\n        );\r\n    } // console.log(if () {}); <- нельзя\r\n    // <expr> ? <true> : <false> <- тернарный оператор\r\n\r\n    handleAdd = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => ({\r\n            items: [...prevState.items, new Task(prevState.nextId + 1, prevState.newName, false)], // копия предыдущего массива + новый объект Task\r\n            nextId: prevState.nextId + 1,\r\n            newName: ''\r\n        }));\r\n    };\r\n\r\n    // {} <- JSX \"вывод\" определённого объекта\r\n    // item={this.state.items[0]} <- передача атрибута в виде объекта, а не строки\r\n}\r\n","import React, {Component} from 'react';\n\nexport default class DatabaseStatistic extends Component{\n    componentWillMount() {\n    }\n\n    render(){\n\n        let menCounter = 0;\n        let womenCounter = 0;\n\n        for (const user of this.props.users) {\n            if (user.gender === 'Мужской'){\n                menCounter++;\n            }\n            if (user.gender === 'Женский'){\n                womenCounter++;\n            }\n\n        }\n        return(\n            <div>\n                <span className=\"h5\">Статистика по аккаунтам</span>\n                <p>\n                    <span className=\"h5\">Всего аккаунтов: {this.props.users.length}</span>\n                </p>\n                <p>\n                    <span className=\"h5\">Мужчин: {menCounter}, женщин: {womenCounter}</span>\n                </p>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport UsersList from \"../UsersList/UsersList\";\nimport DatabaseStatistic from \"../DatabaseStatistic/DatabaseStatistic\";\nimport User from \"../model/User\";\nimport Question from \"../model/Question\";\n\nexport default class UsersPage extends Component{\n    state = {\n        users: [\n\n        ],\n        questions: [],\n        questionsCounter: 0\n\n    }; // <- ES10: 2019 (Babel)\n\n    componentDidMount() {\n\n        fetch(\"https://timetable-eeenkeeei.herokuapp.com/getSupportList\", {\n            method: 'GET',\n            headers: {'Content-Type': 'application/json'},\n        })\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    let objectToPush;\n                    for (const resultElement of result) {\n                        if (resultElement.support.length !== 0) {\n                            resultElement.support.map((object) => {\n                                objectToPush = new Question(resultElement.username, object.theme, object.question, object.status);\n                                this.setState({\n                                    questions: [...this.state.questions, objectToPush]\n                                });\n                                if (objectToPush.status === 'false') {\n                                    this.setState({\n                                        questionsCounter: this.state.questionsCounter+1\n                                    });\n\n\n                                }\n\n                            })\n                        }\n                        this.setState({\n                            users: [...this.state.users, new User(resultElement)],\n                        });\n\n                    }\n                },\n                (error) => {\n                    console.log(error)\n                }\n            );\n    }\n\n    render() {\n        return(\n\n            <div>\n                <DatabaseStatistic users={this.state.users}/>\n                <UsersList item={this.state.users}/>\n            </div>\n\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport '../App.css';\nimport {Route, Switch} from \"react-router-dom\";\nimport Support from \"../Support/Support\";\nimport UsersPage from \"../UsersPage/UsersPage\";\n\n\nexport default class Main extends Component{\n    state = {\n        count: 1\n    };\n\n    handleCounterChange = (counter) => {\n        this.props.onChangeState(counter)\n    };\n\n\n\n    render() {\n\n        return(\n            <main count={this.state.count}>\n                <Switch>\n                    <Route exact path='/users' component={UsersPage} />\n                    <Route path='/support'  render={(props)=><Support count={this.state.count} onHandleUsersChange={this.handleCounterChange} {...props}/>}/>}/>\n                </Switch>\n            </main>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport Menu from \"./Menu/Menu\"\nimport Main from \"./Main/Main\"\n\nclass App extends Component {\n    state = {\n        questionsCounter: 0,\n        toggle: false,\n        toggleCount: 0\n    };\n\n    onChangeToggle = () =>{\n        this.setState({\n            toggle: !this.state.toggle\n        })\n    };\n\n\n    onChangeState = (counter) =>{\n        this.setState({\n            questionsCounter: counter,\n            toggleCount: counter,\n\n        });\n        // console.log('counter', counter)\n    };\n\n    render() {\n        // console.log(this.state.questionsCounter);\n\n        // return React.createElement('section', null, React.createElement('div', null, React.createElement('span', null, null)));\n        return ( // <- нужно запомнить про открывающую круглую скобку\n\n\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-3\">\n                        <Menu count={this.state.questionsCounter}/>\n                    </div>\n                    <div className=\"col-9\">\n                        <Main onChangeState={this.onChangeState}/>\n                    </div>\n                </div>\n            </div>\n        ); // <- внутри JSX наверху должен быть всегда один родитель\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}